@startuml
left to right direction
scale 2
title Class Diagram

class main << (F,orange) >> {
    script, first = argv
    --
    rc = Console()
    nbox = NboxApi()
    create_dm = CreateDm()
    create_obj = CreateObject()
    --
    dm = create_dm.engine()
    create_obj.engine()
}

class CreateDm {
    +self.rc: class
    +self.nbox: class
    +self.my_vars: dict
    +clstr_err: list
    +clstr_site: dict
    +vm_err: list
    +tmp_vm: dict
    +vm: dict
    +intf_err: list
    +intf: list
    +ip: list
    +tmp_intf_dict: dict
    +tmp_intf_ip: list
    +all_vm: list
    +engine()
    +create_vm()
    +rmv_empty()
    +create_intf_dm()
    +vm_error()
}

class CreateObject{
    +self.rc: class
    +self.nbox: class
    +vm: dict
    +vm_info: dict
    +intf_info: dict
    +vm_exist: dict
    +deploy_err: list
    +vm_result: dict
    +dm: dict
    +vm_attr_update: str
    +intf_info: dict
    +intf_result: list
    +intf_exist: dict
    +obj_type: str
    +output_dict: dict
    +input_list: list
    +ip_result: list
    +tmp_ip_result: dict
    +engine()
    +create_vm()
    +update_vm()
    +crte_upte_stdout()
    +format_rslt_err()
    +crte_upte_intf()
    +crte_upte_ip()
    +format_stdout_intf_ip()

}
class NboxApi {
    +self.nb: pynetbox
    +self.rc: rich
    +url: string
    +token: string
    +obj_name: string
    +api_attr: string
    +input_obj: dict
    +error: list
    +result: dict
    +api_obj: pynetbox
    +task_type: string
    +input_obj_type: string
    +other_obj_type: string
    +obj_id: integer
    +obj_cntr_fltr: string
    +obj_cntr_id: integer
    +obj_cntr_name: string
    +intf: string
    +vl_grp: string
    +vlan: integer
    +vlan_id: list
    +obj_create()
    +obj_update()
    +obj_delete()
    +get_multi_id()
    +get_single_id()
    +get_single_fltr_id()
    +get_vlan_id()
    +chk_exist()
}

main ..> NboxApi
main ..> CreateDm
main ..> CreateObject
CreateDm ..> NboxApi
CreateObject ..> NboxApi

newpage
title Function Diagram

class main << (F,orange) >> {
    script, first = argv
    --
    rc = Console()
    nbox = NboxApi()
    create_dm = CreateDm()
    create_obj = CreateObject()
    --
    dm = create_dm.engine()
    create_obj.engine()
}


@enduml
